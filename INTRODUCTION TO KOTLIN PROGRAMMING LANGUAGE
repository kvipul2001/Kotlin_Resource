INTRODUCTION TO KOTLIN PROGRAMMING LANGUAGE

Kotlin:-
Kotlin Is A General Purpose, Statistically Typed And Open Source Programming Language.
Kotlin Runs On JVM And Can Be Used Anywhere Java Is Used Today
Kotlin Can Be Used To Develop Android Apps, Server Side Apps And Much More

History:-

In July 2011, JetBrains Unveild Project "Kotlin", A New Language For The JVM, Which Had Been Under Development For A Year.
JetBrains Lead Dmitry Jemerov Said That Most Language Did Not Have The Features They Were Looking For, With The Expectations Of Scala.
However he Cited Slow Compilation Time Of Scala As A Deficiency.
One Of The Started Goals Of Kotlin Is To Compile As Quickly As Java.
In February 2012, JetBrains Open Sourced The Project Under The Apache 2 License

The Kotlin Name Comes From Kotlin Island, Near St. Petersburg.
Andrey Breslav Mentioned That The Team Decided To Name It After An Island, Just Like Java Was Named After The Indonesian Island Of Java.

Kotlin Version 1.0 Was Released On Febraury 15, 2016.
This Is Considered To Be The First Officially Stable Release
And Jetbrains Has Committed To Long Term Backwards Compatibility Starting With This Version.

At Google I/O 2017, Google Announced First Class Support For Kotlin On Android

Kotlin Version 1.2 Was Released On November On November 28, 2017.
Sharing Code Between JVM And JavaScript Platform Features Was Newly Added To This Release
[ As Of Version 1.4 Multiplatform Programming Is An Alpha Features Upgraded From Experimental ]
A Full Stack Demo Has Been Made With The New Kotlin/JS Gradle Plugin

Kotlin Version 1.3 Was Released On October 29, 2018 Bringing Coroutines For Asynchronous Programming

On May 7, 2019 Google Announced That The Kotlin Programming Language Is Now Its Preferred Language Fpr Android App Developers.

Kotlin Version 1.4 Was Released In August 2020, With Some Slight Changes To Support For Apple's Platform. i.e To The Objective-C / Swift Interop.

Kotlin Version 1.5 Was Released In May 2021


FEATURES OF KOTLIN :-

1. Concise:-
    Kotlin Reduces Writing The Extra Codes. This Makes Kotlin More Concise

2. Null-Safety:-
    Kotlin Is Null Safety Language. Kotlin Aimed To Eliminate The Null Pointer Exception From Code

3. Interoperable:-
    Kotlin Easily Calls The Java Code In A Code In A Natural Way As Well As Kotlin Code Can Be Used By Java

4. Smart Cast:-
    Kotlin Explicit Type Casts The Immutable Values And Inserts The Value In Its Safe Casts Automatically

5. Compilation Time:-
    Kotlin Has Better Performance And Fast Compilation Time

6. Tool Friendly:-
    Kotlin Programs Are Build Using The Command Line As Well As Of Java IDE

7. Extension Function:-
    Kotlin Supports Extension Functions And Properties Which Means It Helps To Extend The Functionality Of Classes Without Touching Their Codes


Hello Kotlin! Program

fun Main(){
    println("Hello, Kotlin!")
}



Hi
